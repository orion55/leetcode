class RecentCounter {
  private calls: number[];

  constructor() {
    this.calls = [];
  }

  ping(t: number): number {
    // Добавляем новый вызов с временной меткой t
    this.calls.push(t);

    // Удаляем все вызовы, время которых меньше (t - 3000)
    while (this.calls[0] < t - 3000) {
      this.calls.shift();
    }

    // Количество оставшихся вызовов — это число запросов за последние 3000 мс
    return this.calls.length;
  }
}

// Примеры использования:

const counter = new RecentCounter();

// Пример 1:
// Вызов ping(1) возвращает 1, так как в диапазоне [-2999, 1] находится только запрос 1.
console.log(counter.ping(1)); // Вывод: 1

// Пример 2:
// Вызов ping(100) возвращает 2, так как в диапазоне [-2900, 100] находятся запросы 1 и 100.
console.log(counter.ping(100)); // Вывод: 2

// Пример 3:
// Вызов ping(3001) возвращает 3, так как в диапазоне [1, 3001] находятся запросы 1, 100 и 3001.
console.log(counter.ping(3001)); // Вывод: 3

// Пример 4:
// Вызов ping(3002) возвращает 3, так как в диапазоне [2, 3002] находятся запросы 100, 3001 и 3002 (запрос 1 исключён).
console.log(counter.ping(3002)); // Вывод: 3
